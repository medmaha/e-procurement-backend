from django.db.models.signals import post_save
from django.dispatch import receiver
from django.contrib.auth.models import Group
from apps.accounts.models import Account, AuthGroup
from apps.organization.models import Staff
from django.db.models import F


@receiver(post_save, sender=Account)
def update_user__staff_profile(created, instance: Account, **kwargs):
    profile_name, profile = instance.get_profile()
    if not created and profile_name == "Staff":
        staff_queryset = Staff.objects.only("id").filter(pk=profile.pk)
        staff_queryset.update(
            email=instance.email,
            first_name=instance.first_name,
            last_name=instance.last_name,
            middle_name=instance.middle_name or "",
            disabled=instance.is_active == False,
            is_admin=instance.is_staff,
        )


@receiver(post_save, sender=Group)
def sync_group_1(created, instance: Group, *args, **kwargs):

    queryset = AuthGroup.objects.only("id", "editable").filter(
        group_id=instance.pk,
    )

    if not queryset.exists():
        AuthGroup.objects.create(
            editable=False,
            name=instance.name,
            group_id=instance.pk,
            authored_by="@system",
            description="This was generated by the system",
        )
        return

    queryset.update(editable=F("editable") == True, name=instance.name)
